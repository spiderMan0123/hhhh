// App.tsx
import React, { useState, useEffect } from 'react';

const NumberGuessingGame = () => {
  const [target, setTarget] = useState<number>(Math.floor(Math.random() * 100) + 1);
  const [range, setRange] = useState<[number, number]>([1, 100]);
  const [userGuess, setUserGuess] = useState<string>('');
  const [history, setHistory] = useState<number[]>([]);
  const [message, setMessage] = useState<string>('输入1-100之间的数字开始游戏');
  const [gameOver, setGameOver] = useState(false);

  // 处理用户输入
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    const guess = parseInt(userGuess);
    
    if (isNaN(guess)) {
      setMessage('请输入有效数字');
      return;
    }

    if (guess < range[0] || guess > range[1]) {
      setMessage(`请输入${range[0]}-${range[1]}之间的数字`);
      return;
    }

    // 检查猜测结果
    if (guess === target) {
      setGameOver(true);
      setHistory([...history, guess]);
      setMessage('🎉 恭喜你猜对了！');
    } else {
      const newRange: [number, number] = 
        guess < target ? [guess + 1, range[1]] : [range[0], guess - 1];
      
      setRange(newRange);
      setHistory([...history, guess]);
      setMessage(guess < target ? '试试更大的数字 ↑' : '试试更小的数字 ↓');
    }
    
    setUserGuess('');
  };

  // 重置游戏
  const restartGame = () => {
    setTarget(Math.floor(Math.random() * 100) + 1);
    setRange([1, 100]);
    setUserGuess('');
    setHistory([]);
    setMessage('输入1-100之间的数字开始游戏');
    setGameOver(false);
  };

  return (
    <div className="game-container p-4 max-w-md mx-auto">
      <h2 className="text-2xl font-bold mb-4 text-blue-600">数字猜猜看</h2>
      
      <form onSubmit={handleSubmit} className="mb-4">
        <div className="flex gap-2">
          <input
            type="number"
            value={userGuess}
            onChange={(e) => setUserGuess(e.target.value)}
            min={range[0]}
            max={range[1]}
            disabled={gameOver}
            className="flex-1 p-2 border rounded"
            placeholder={`${range[0]}-${range[1]}`}
          />
          <button
            type="submit"
            disabled={gameOver}
            className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-400"
          >
            {gameOver ? '已结束' : '提交'}
          </button>
        </div>
      </form>

      <div className="space-y-2">
        <div className="text-lg font-semibold text-gray-700">{message}</div>
        <div className="text-sm text-gray-600">
          当前范围：{range[0]} - {range[1]}
        </div>
        <div className="text-sm">
          猜测记录：{history.join(' → ')}
        </div>
      </div>

      {gameOver && (
        <button
          onClick={restartGame}
          className="mt-4 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
        >
          重新开始
        </button>
      )}
    </div>
  );
};

export default NumberGuessingGame;
